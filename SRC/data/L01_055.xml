<cb:Page xmlns:cb="http://www.crackerbarrel.com/resonate">
	<cb:CSS><![CDATA[
		
		.dragBox
		{
			z-index:100;
			border-radius: 5px;
			background:#f48c04;
			font-size:12pt;
			color:white;
			text-align:center;
			line-height:2.5;
		}
		.dropBox
		{
			
			border-radius: 20px;
			border-style: solid;
    		border-width: 5px;
			border-color:#85beea;
			background-color:rgba(255,255,255,0.3);
			overflow:hidden;
		}	
	
		.pointsLabel
		{
			color:#FFFFFF;
			font-size:1.3rem;
			text-align:center;
		
		}
		
		.clickBtn, .clickBtnDisabled,.clickBtnSelected,.clickBtnSelectedDisabled {
			 border-style:solid;
			 border-width:3px;
			 border-color:#000000;
		 	 border-radius: 10px;
   			 background: #F0A138;
             padding: 0px; 
           
			color: #000;
			font-family:arial;
			font-size:1.1rem;
			font-weight:bold;
			text-decoration:none;
			text-align:center;
			cursor:"pointer";
		}
		
		.clickBtnDisabled{
			opacity:0.6;
			cursor:"default";
		}
		
		
		.clickBtnSelected,.clickBtnSelected:hover,.clickBtnSelectedDisabled{
			background: #00AA00;
		}
		
		.clickBtn:hover{
		
			background: #8E5C1A;
		}
		.clickBtn{
		cursor:pointer !important;
		}
		
		.cover
		{
			background:rgba(175,126,75,0.8);
		
		}
		
		.fbBox
		{
			z-index:100;
			border-radius: 20px;
			box-shadow: 8px 8px 20px #000;
			background:white;
		}
	
		.fbBox #titleBar
		{
			border-top-left-radius:15px;
			border-top-right-radius:15px;
			background:#927c4f;
			font-size: 1.4em;
			color:white;
			
		}

	]]></cb:CSS>
	<cb:Script><![CDATA[


		var dragCount = 5; // keep track of the number of draggable items
		var targetCount = 5; // keep track of the number of targets
		var correct = [1,0,4,3,2]; // change as needed to match index of drag item
		var attempt = 0; // keep track of the current attempt
		var points = [10,5,0]; // point values by attempt
		var userPoints = 0; // current number of points
		var score = 0; 
		var points= 0;
		
		if (course.sessionData.kc0 == undefined){course.sessionData.kc0 = [0,0,0,0,0,0,0,0];}		
		// loop through and enable/disable the draggable items
		function enableDragItems(val)
		{
			if (val == undefined){val = true;}
			var i;
			for (i=0;i<dragCount;i++)
			{	
				// get a jquery friendly version of our object by using .divObject
				dynPage.getObject("drag" + i).divObject.draggable( val?"enable":"disable");
			}//end for
		}// end function
	
		// check and see if the drabbable items have all been placed in a target
		function allPlaced()
		{
			return (getPlaced().indexOf(-1) == -1);
		}// end function
		
		
		// Determines if the submit button should be active / displayed
		function updateSubmitBtn()
		{
			var active = allPlaced();
			var btn = dynPage.getObject("submitBtn");
			btn.setEnabled(active);
			btn.setCSS("display",attempt<=1?"block":"none");
			btn.setClass(active?"clickBtn":"clickBtnDisabled");
		}
		
		// figure out if we are on a target that accepts the item
		// for this page, all targets accept all dropped items
		function checkDropAccept(target,dropItem)
		{
			return (target != null);
		}// end function
		
		// check to see if the item dropped should be rejected.
		function checkReject(sender,target)
		{
			// always return false from this function. We will handle the actual rejection in our custom events.
			// if we are on the target or not
			if (target == false){
				sender.dispatch("onReject",{});
			}else{
				sender.dispatch("onAccept",{target:dynPage.getObject(target.context.id)});
			}// end if
			return false;
		}// end function
		
		// snap a draggable item back to it's starting position.
		function snapBack(obj)
		{
			var i;
			// loop through and remove the item we are moving from any target's currentItem property
		 	for (i=0;i<targetCount;i++)
		 	{
		 		if (dynPage.getObject("drop" + i).currentItem == obj)
		 		{
		 			dynPage.getObject("drop" + i).currentItem = null;
		 		
		 		}//end if
		 	}// end for
		 	
		 	// update the submit button's state
			updateSubmitBtn();
			// move it back to where it started
			Animation.moveTo(obj,dynPage.getObjectParams(obj.id).x,dynPage.getObjectParams(obj.id).y,500);
		}// end function
	
		// move all draggable items to their correct location
		function placeInCorrectTargets()
		{
			var i;
			var x;
			var y;
			// loop through and see where each item belongs.
			for (i=0;i<correct.length;i++)
			{
				x = dynPage.getObject("drop" + i).left + 5;
				y = dynPage.getObject("drop" + i).top + 106;
				// move it
				Animation.moveTo(dynPage.getObject("drag" + correct[i]),x,y,800);
			}// end for	
				showFeedback(2000);
		}// end function
		
		
		// when an item starts to be dragged, move it to a higher z-index
		function handleStartDrag(sender,event)
		{
			
			var i;
			// reset all drag items
			for (i=0;i<dragCount;i++)
			{	
				dynPage.getObject("drag"+i).setCSS("z-index",5);
			}
			// move the one that is being dragged to the top
			sender.setCSS("z-index",500);
		}// end function
		
		// handle a rejection by moving it back to where it started.
		function handleDropReject(event){
			snapBack(event.sender);	
		}// end function
		
		// handle the acceptence of a dropped item on a target
		function handleDropAccept(event){
			// get the target location and use it to figure out the new location of our dropped item
			var newX = event.target.left+5;
			var newY = event.target.top+106;
			
			var i;
			
			// change the z-index back
			event.sender.setCSS("z-index",5);
			
			// see if there is something there now
			if (event.target.currentItem != null && event.target.currentItem!= event.sender)
			{
				snapBack(event.target.currentItem);
			}
			// move the drop item
			Animation.moveTo(event.sender,newX,newY,100);
			
			// clear it out of any target and then reset it
			for (i=0;i<targetCount;i++)
			{
				if (dynPage.getObject("drop" + i).currentItem == event.sender)
				{
					dynPage.getObject("drop" + i).currentItem = null;
				}
			}
			event.target.currentItem = event.sender;
			updateSubmitBtn();
		}// end function
		
		
		// get an array of all placed items
		function getPlaced()
		{
			var result = new Array();
			for (i=0;i<targetCount;i++)
			{	
				// see if the target has an item on it, if so store it
				if (dynPage.getObject("drop" + i).currentItem == null){
					result[i] = -1;
				}else{
					result[i] = parseInt(dynPage.getObject("drop" + i).currentItem.id.substr(4));
				}// end if
			}// end for
			return result;
		}// end function
		
		
		// judge the state of the items/targets and see if it matches the correct array
		function judge()
		{
			var isCorrect = true;
			// get an array of what is placed where
			var user = getPlaced();
			course.sessionData.kc0[7] = userPoints;
			var i;
			++attempt; // increment the attempt count.
			// comare the correct array to the placed array
			if (correct.toString() == getPlaced().toString()){
				// it's correct, shut off the submit button
				dynPage.getObject("submitBtn").setCSS("display","none");
				// figure out the points based on the attempt.
				userPoints = (attempt == 1?10:5);
				
				course.sessionData.kc0[7] = userPoints;
				
				// update the label on the table
				dynPage.getObject("table.label").setText(dynPage.refreshValue("table.label"));
				// show a plate for each point
				for (i=0;i<userPoints;i++)
				{
					Animation.fadeIn(dynPage.getObject("table.plate"+i),200,1,(i*200));
				
				}
				// stop items from being draggable
				enableDragItems(false);
				
				// set the prompt and enable the button
			 	setPrompt("Thatâ€™s correct!");
			
			 	setTimeout(function(){showFeedback();},2000);
			 }else{
			 	// was incorrect, let's figure out which attempt they are on
			 	if (attempt<=1){
			 		// first attempt, update prompt and send all items back to start
			 		setPrompt("<font size='3px'>One or more of your answers are incorrect. Please try again.</font>");
			 		for (i=0;i<dragCount;i++)
			 		{
			 			snapBack(dynPage.getObject("drag"+i));
			 		}// end for
			 		
			 	}else{
			 		// second attempt
			 		// hide the submit button, disable the drag items and move them to the correct location
			 		dynPage.getObject("submitBtn").setCSS("display","none");
			 		enableDragItems(false);
			 		placeInCorrectTargets();
			 		
			 		// update prompt and enable next
			 		setPrompt("Incorrect, the correct answers are shown.");
			 		setTimeout(function(){showFeedback();},2000);
			 	}// end if
			 }// end if
		}// end function
		function showFeedback()
		{
			points = course.sessionData.kc0.reduce(function(total,num){return total+num;});
			score = getScore();
			dynPage.getObject("feedback.fbBoxCorrect.text").setText( (points>=40?"Congratulations ":"That was tough,") + " You scored "+ points +" out of 80 points. " + (points>=40?"Click next to continue or click Retry to try the game again.":"We would recommend you click Retry to try the game again."));
			 if(points >35){
			 dynPage.getObject("feedback.fbBoxCorrect.titleBar").setCSS("background","#44780d");
			 }
			 else{
			 dynPage.getObject("feedback.fbBoxCorrect.titleBar").setCSS("background","#c33131");
			 }
			dynPage.getObject("feedback.fbBoxCorrect").setCSS("display",correct?"block":"none");
			dynPage.getObject("feedback").setCSS("display","block");
			setPrompt(course.strings.prompt.clickNext[course.language]);
			enableNextButton(true);
			 		
		}
		function getScore()
			{
				var result = new Object();
				result.max = course.sessionData.kc0.length*10;
				result.user = course.sessionData.kc0.reduce(function(total,num){return total+num;});
				result.percentage = Math.round((result.user / result.max)*100);
				return result.percentage;
			
			}

		
	]]></cb:Script>

	<cb:Event name="onPageLoad">
		<cb:Script><![CDATA[
			setPrompt(course.strings.prompt.completeInteraction[course.language]);
		
		]]></cb:Script>
	</cb:Event>	
	
	<cb:Div id="drag0" x="80" y="80" width="150" height="40" cssClass="dragBox" cursor="pointer" opacity="0">
		<cb:Value><![CDATA[Kettle Baskets]]></cb:Value>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
					self.divObject.draggable({containment:"parent",
					cursor: "pointer",
					revert: function (target){return checkReject(self,target);},
					start:function (event){handleStartDrag(self,event);}
				});
			]]></cb:Script>
		</cb:Event>
		<cb:Event name="onReject"><cb:Script><![CDATA[handleDropReject(event);]]></cb:Script></cb:Event>
		<cb:Event name="onAccept"><cb:Script><![CDATA[handleDropAccept(event);]]></cb:Script></cb:Event>
	</cb:Div>
	<cb:Div id="drag1" x="@=dynPage.getObjectParams('drag0').x" y="@=dynPage.getObjectParams('drag0').y + 55" width="@=dynPage.getObjectParams('drag0').width" height="@=dynPage.getObjectParams('drag0').height" cssClass="dragBox"  opacity="0" cursor="pointer">
		<cb:Value><![CDATA[Steak Knife]]></cb:Value>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
					self.divObject.draggable({containment:"parent",
					cursor: "pointer",
					revert: function (target){return checkReject(self,target);},
					start:function (event){handleStartDrag(self,event);}
				});
			]]></cb:Script>
		</cb:Event>
		<cb:Event name="onReject"><cb:Script><![CDATA[handleDropReject(event);]]></cb:Script></cb:Event>
		<cb:Event name="onAccept"><cb:Script><![CDATA[handleDropAccept(event);]]></cb:Script></cb:Event>
	</cb:Div>
	<cb:Div id="drag2" x="@=dynPage.getObjectParams('drag0').x" y="@=dynPage.getObjectParams('drag1').y + 55" width="@=dynPage.getObjectParams('drag0').width" height="@=dynPage.getObjectParams('drag0').height" cssClass="dragBox"  opacity="0" cursor="pointer">
		<cb:Value><![CDATA[Silverware Knife]]></cb:Value>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
					self.divObject.draggable({containment:"parent",
					cursor: "pointer",
					revert: function (target){return checkReject(self,target);},
					start:function (event){handleStartDrag(self,event);}
				});
			]]></cb:Script>
		</cb:Event>
		<cb:Event name="onReject"><cb:Script><![CDATA[handleDropReject(event);]]></cb:Script></cb:Event>
		<cb:Event name="onAccept"><cb:Script><![CDATA[handleDropAccept(event);]]></cb:Script></cb:Event>
	</cb:Div>
	<cb:Div id="drag3" x="@=dynPage.getObjectParams('drag0').x" y="@=dynPage.getObjectParams('drag2').y + 55" width="@=dynPage.getObjectParams('drag0').width" height="@=dynPage.getObjectParams('drag0').height" cssClass="dragBox"  opacity="0" cursor="pointer">
		<cb:Value><![CDATA[Spoodles]]></cb:Value>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
					self.divObject.draggable({containment:"parent",
					cursor: "pointer",
					revert: function (target){return checkReject(self,target);},
					start:function (event){handleStartDrag(self,event);}
				});
			]]></cb:Script>
		</cb:Event>
		<cb:Event name="onReject"><cb:Script><![CDATA[handleDropReject(event);]]></cb:Script></cb:Event>
		<cb:Event name="onAccept"><cb:Script><![CDATA[handleDropAccept(event);]]></cb:Script></cb:Event>
	</cb:Div>
	<cb:Div id="drag4" x="@=dynPage.getObjectParams('drag0').x" y="@=dynPage.getObjectParams('drag3').y + 55" width="@=dynPage.getObjectParams('drag0').width" height="@=dynPage.getObjectParams('drag0').height" cssClass="dragBox"  opacity="0" cursor="pointer">
		<cb:Value><![CDATA[Fruit Dish]]></cb:Value>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
					self.divObject.draggable({containment:"parent",
					cursor: "pointer",
					revert: function (target){return checkReject(self,target);},
					start:function (event){handleStartDrag(self,event);}
				});
			]]></cb:Script>
		</cb:Event>
		<cb:Event name="onReject"><cb:Script><![CDATA[handleDropReject(event);]]></cb:Script></cb:Event>
		<cb:Event name="onAccept"><cb:Script><![CDATA[handleDropAccept(event);]]></cb:Script></cb:Event>
	</cb:Div>
	<cb:Div id="drop0" x="380" y="40" width="150" height="145" cssClass="dropBox">
		<cb:Image id="image" x="0" y="0" width="150" height="150" >
			<cb:Value><![CDATA[images/slide_20/M2S7_SteakKnife.jpg]]></cb:Value>
		</cb:Image>
		<cb:Div id="footer" x="0" y="100" width="150" height="45" background="#f48c04" border-radius="5px" z-index="2" />
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
				self.divObject.droppable({
					tolerance:"pointer",
					drop:null,
					accept:function(dragItem){return checkDropAccept(self,dragItem);}
				});
				self.currentItem = null;
			]]></cb:Script>
		</cb:Event>
	</cb:Div>
	
	<cb:Div id="drop1" x="@=dynPage.getObjectParams('drop0').x + dynPage.getObjectParams('drop0').width + 40" y="@=dynPage.getObjectParams('drop0').y" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height" cssClass="dropBox">
		<cb:Image id="image" x="0" y="0" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height - 45" >
			<cb:Value><![CDATA[images/slide_20/M2S3_KettleBasket.jpg]]></cb:Value>
		</cb:Image>
		<cb:Div id="footer" x="0" y="@=dynPage.getObjectParams('drop0').height - 45 " width="@=dynPage.getObjectParams('drop0').width" height="45" background="#f48c04" border-radius="5px" z-index="2"/>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
				self.divObject.droppable({
					tolerance:"pointer",
					drop:null,
					accept:function(dragItem){return checkDropAccept(self,dragItem);}
				});
				self.currentItem = null;
			]]></cb:Script>
		</cb:Event>
	</cb:Div>	
	
	<cb:Div id="drop2" x="@=dynPage.getObjectParams('drop1').x + dynPage.getObjectParams('drop0').width + 40" y="@=dynPage.getObjectParams('drop0').y" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height" cssClass="dropBox">
		<cb:Image id="image" x="0" y="0" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height - 35" >
			<cb:Value><![CDATA[images/slide_20/M2S6_Fruitdish.jpg]]></cb:Value>
		</cb:Image>
		<cb:Div id="footer" x="0" y="@=dynPage.getObjectParams('drop0').height - 45 " width="@=dynPage.getObjectParams('drop0').width" height="45" background="#f48c04" border-radius="5px" z-index="2"/>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
				self.divObject.droppable({
					tolerance:"pointer",
					drop:null,
					accept:function(dragItem){return checkDropAccept(self,dragItem);}
				});
				self.currentItem = null;
			]]></cb:Script>
		</cb:Event>
	</cb:Div>	

	<cb:Div id="drop3" x="@=dynPage.getObjectParams('drop0').x" y="@=dynPage.getObjectParams('drop0').y + dynPage.getObjectParams('drop0').height + 25" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height" cssClass="dropBox">
		<cb:Image id="image" x="0" y="0" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height - 45" >
			<cb:Value><![CDATA[images/slide_20/M2S9_Spoodles.jpg]]></cb:Value>
		</cb:Image>
		<cb:Div id="footer" x="0" y="@=dynPage.getObjectParams('drop0').height - 45 " width="@=dynPage.getObjectParams('drop0').width" height="45" background="#f48c04" border-radius="5px" z-index="2"/>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
				self.divObject.droppable({
					tolerance:"pointer",
					drop:null,
					accept:function(dragItem){return checkDropAccept(self,dragItem);}
				});
				self.currentItem = null;
			]]></cb:Script>
		</cb:Event>
	</cb:Div>	
	
	<cb:Div id="drop4" x="@=dynPage.getObjectParams('drop1').x" y="@=dynPage.getObjectParams('drop3').y" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height" cssClass="dropBox">
		<cb:Image id="image" x="0" y="0" width="@=dynPage.getObjectParams('drop0').width" height="@=dynPage.getObjectParams('drop0').height - 35" >
			<cb:Value><![CDATA[images/slide_20/M2S7_SilverwareKnife.jpg]]></cb:Value>
		</cb:Image>
		<cb:Div id="footer" x="0" y="@=dynPage.getObjectParams('drop0').height - 45 " width="@=dynPage.getObjectParams('drop0').width" height="45" background="#f48c04" border-radius="5px" z-index="2"/>
		<cb:Event name="onRender">
			<cb:Script><![CDATA[
				self.divObject.droppable({
					tolerance:"pointer",
					drop:null,
					accept:function(dragItem){return checkDropAccept(self,dragItem);}
				});
				self.currentItem = null;
			]]></cb:Script>
		</cb:Event>
	</cb:Div>	
	<cb:Div id="table" x="410" y="430" width="100" height="100">
		<cb:Image id="img" x="0" y="-43" width="307" height="154">
			<cb:Value><![CDATA[images/table.png]]></cb:Value>
		</cb:Image>
		<cb:Image id="plate0" x="40" y="-10" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate1" x="50" y="-20" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate2" x="60" y="-30" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate3" x="55" y="-40" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate4" x="45" y="-50" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		
		<cb:Image id="plate5" x="160" y="-10" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate6" x="170" y="-20" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate7" x="180" y="-30" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate8" x="175" y="-40" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Image id="plate9" x="165" y="-50" width="96" height="27" opacity="0"><cb:Value><![CDATA[images/coins.png]]></cb:Value></cb:Image>
		<cb:Text id="label" x="0" y="13" width="297" height="30" cssClass="pointsLabel">
			<cb:Value><![CDATA[@=userPoints + " points"]]></cb:Value>
		</cb:Text>
	</cb:Div>
		
	<cb:Div id="feedback" x="0" y="0" width="1004" height="514" z-index="100" display="none">
		<cb:Div id="cover" x="0" y="27" width="1004" height="474" cssClass="cover" />
		<cb:Div id="fbBoxCorrect" width="550" height="361" x="225" y="80" cssClass="fbBox" display="none">	
		<cb:Div id="titleBar" x="0" y="0" width="550" height="40" background="#44780d">
			<cb:Text id="caption" x="10" y="10" width="400" height="30">
					<cb:Value><![CDATA[]]></cb:Value>
			</cb:Text>
		</cb:Div>
			<cb:Text id="text" x="40" y="160" width="500" height="auto" cssClass="textBoxLeft">
				<cb:Value><![CDATA[]]></cb:Value>
			</cb:Text>
			<cb:Button id="retryBtn" x="455" y="305" width="80" height="40" cssClass="clickBtn" enabled="true" cursor="default">
				<cb:Value><![CDATA[Retry]]></cb:Value>
				<cb:Event name="onClick">
					<cb:Script><![CDATA[
						course.loadPageByID("L01_020");
					]]></cb:Script>
				</cb:Event>
			</cb:Button>
		</cb:Div>	
	</cb:Div>
		
	<cb:Button id="submitBtn" x="795" y="415" width="80" height="40" cssClass="clickBtnDisabled" enabled="false" cursor="default">
			<cb:Value><![CDATA[Submit]]></cb:Value>
			<cb:Event name="onClick">
				<cb:Script><![CDATA[
					console.log("clicked submit");
					judge();
				]]></cb:Script>
			</cb:Event>
		</cb:Button>

	<cb:Timer id="timer" interval="100" repeat="1" autoStart="true">
		<cb:Trigger time="0">
			<cb:Script><![CDATA[
			var i;
					for (i=0;i<dragCount;i++){
						Animation.slideHorizontalAndFadeIn(dynPage.getObject("drag"+i),-30,400,i*400);
					}
			]]></cb:Script>
		</cb:Trigger>
	</cb:Timer>


</cb:Page>