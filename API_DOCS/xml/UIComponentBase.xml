<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="xslt/class.xsl"?><class name="UIComponentBase" namespace="com.crackerbarrel.components" extends="com.crackerbarrel.events.EventDispatcher" author="Christopher Swenson" version="0.0.1">	<description><![CDATA[Base class for all Resonate graphical components, this class should not be instanced directly]]></description>	<constructor>	<param name="id" type="String">		<![CDATA[id of the component]]>	</param>	<param name="left" type="Int">		<![CDATA[left position of the component]]>	</param>	<param name="top" type="Int">		<![CDATA[top position of the component]]>	</param>	<param name="uiStyle" type="UIStyle=null">		<![CDATA[style data to pass to the component]]>	</param>	<return type="UIComponentBase"><![CDATA[the new UIComponentBase]]>	</return></constructor>	<property name="divObject" type="Object">		<![CDATA[Reference to the internal Div used to hold the component]]>	</property>	<property name="id" type="String">		<![CDATA[The id of the component]]>	</property>	<property name="parentObject" type="Object">		<![CDATA[The object that holds the component]]>	</property>	<property name="left" type="Int">		<![CDATA[The left position of the component]]>	</property>	<property name="top" type="Int">		<![CDATA[The top position of the component]]>	</property>	<property name="width" type="Int">		<![CDATA[The width of the component]]>	</property>	<property name="height" type="Int">		<![CDATA[The height of the component]]>	</property>	<property name="uiStyle" type="UIStyle">		<![CDATA[The uiStyle linked to the component]]>	</property>	<property name="logic" type="Logic=null">		<![CDATA[the logic object linked to the component]]>	</property>	<property name="enabled" type="Boolean=true">		<![CDATA[Is the component enabled?]]>	</property>	<property name="canDrag" type="Boolean=false">		<![CDATA[Is the component draggable?]]>	</property>	<property name="children" type="KeyCollection">		<![CDATA[KeyCollection of visible Children]]>	</property>	<property name="nonVisibleChildren" type="KeyCollection">		<![CDATA[KeyCollection of nonvisible children]]>	</property>	<event name="onStartDrag">	<description><![CDATA[Fires when the component begins dragging]]></description></event>	<event name="onStopDrag">	<description><![CDATA[Fires when the component stops dragging]]></description></event>	<event name="onDrop">	<description><![CDATA[Fires when the component is dropped after dragging]]></description></event>	<method name="position">	<description><![CDATA[Returns an object with position information includes: x,y]]></description>	<return type="Void">	</return></method>	<method name="getCSS">	<description><![CDATA[Returns the current value of a css attribute]]></description>	<param name="cssAttribute" type="String">		<![CDATA[The css attribute you wish to return]]>	</param>	<return type="Object">	</return></method>	<method name="setCSS">	<description><![CDATA[Sets the current value of a css attribute]]></description>	<param name="cssAttribute" type="String">		<![CDATA[The css attribute you wish to set]]>	</param>	<param name="value" type="Object">		<![CDATA[The value you want the css attribute set to]]>	</param>	<return type="Void">	</return></method>	<method name="setClass">	<description><![CDATA[Sets the current css class of a component]]></description>	<param name="className" type="String">		<![CDATA[The css class you wish to set]]>	</param>	<param name="overwrite" type="Boolean=true">		<![CDATA[Overwrite the class list or append]]>	</param>	<return type="Void">	</return></method>	<method name="removeClass">	<description><![CDATA[Removes the given css class from a component]]></description>	<param name="className" type="String">		<![CDATA[The css class you wish to remove]]>	</param>	<return type="Void">	</return></method>	<method name="setVisible">	<description><![CDATA[Changes the visibility of a component.]]></description>	<param name="value" type="Boolean">		<![CDATA[True/false is the component visible?]]>	</param>	<return type="Void">	</return></method>	<method name="destroy">	<description><![CDATA[Cleanly destroys the component]]></description>	<return type="Void">	</return></method>	<method name="setEnabled">	<description><![CDATA[Sets the enabled property of a component]]></description>	<param name="value" type="Boolean">		<![CDATA[True/false should the component be enabled?]]>	</param>	<return type="Void">	</return></method>	<method name="addChild">	<description><![CDATA[Attaches a component to this component.]]></description>	<param name="component" type="UIComponentBase">		<![CDATA[The component to make a child of this component]]>	</param>	<return type="UIComponentBase"><![CDATA[The added component]]>	</return></method>	<method name="removeChild">	<description><![CDATA[removes a component to this component.]]></description>	<param name="component" type="UIComponentBase">		<![CDATA[The component to remove as a child of this component]]>	</param>	<return type="Void">	</return></method>	<method name="attachDiv">	<description><![CDATA[Attaches a standard div as a child of this component.]]></description>	<param name="div" type="DIV">		<![CDATA[The div to attach as a child of this component]]>	</param>	<return type="DIV"><![CDATA[The attached div]]>	</return></method>	<method name="getChild">	<description><![CDATA[Returns a reference to a child of this component]]></description>	<param name="name" type="String">		<![CDATA[The name of the child you wish to get]]>	</param>	<return type="DIV"><![CDATA[The child]]>	</return></method>	<method name="addNonVisibleChild">	<description><![CDATA[Adds a nonvisible child to the component]]></description>	<param name="name" type="String">		<![CDATA[The name of the child you wish to add]]>	</param>	<param name="object" type="Object">		<![CDATA[The child object you wish to add]]>	</param>	<return type="DIV"><![CDATA[The child object]]>	</return></method>	<method name="getNonVisibleChild">	<description><![CDATA[Returns a reference to a child of this component]]></description>	<param name="name" type="String">		<![CDATA[The name of the child you wish to get]]>	</param>	<return type="DIV"><![CDATA[The child]]>	</return></method>	<method name="removeNonVisibleChild">	<description><![CDATA[Removes a nonvisible child of this component]]></description>	<param name="name" type="String">		<![CDATA[The name of the child you wish to remove]]>	</param>	<return type="Void">	</return></method>	<method name="alpha">	<description><![CDATA[Sets the opacity (alpha) of the component]]></description>	<param name="value" type="Float">		<![CDATA[The value to set the alpha to 0 - 1]]>	</param>	<return type="Float"><![CDATA[The current opacity of the component]]>	</return></method></class>